<template>
	<view class="content">
		<map id="map" ref='map' class="map" :style="{height:mapHeight}" :latitude="centerLatitude" :longitude="centerLongitude"
		 :markers="markers" :show-location="showLocation" :scale="scale" @markertap="markertap">
		</map>
		
		<!-- 订单信息 -->
		<view class="order">
			<view style="margin-top: 10rpx;margin-left: 30rpx;" v-if="showArray.length > 0">
				<text class="passengerInfo-text">乘客：{{showArray[0].PassengerName}}</text>
				<text class="passengerInfo-text">电话：{{showArray[0].PhoneNumber}}</text>
				<text class="passengerInfo-text">上车点：{{showArray[0].PickUpAddress}}</text>
			</view>
			<view class="imageView" v-if="showArray.length > 0">
				<image style="width: 100rpx;height: 100rpx;" src="../../static/driver/unBoard.png" :src="showArray[0].State == 2? Board :unBoard"></image>
			</view>
		</view>
		<!-- 乘客信息 -->
		<view class="passenger" @click="passengerclick">
			<text style="font-size: 30rpx;color: #343434;margin-left: 30rpx;">查看乘客信息</text>
			<text style="color: #9A9A9A;margin-right: 30rpx;">></text>
		</view>
		
		<view class="bottomButtonContent">
			<!-- 长按确认 -->
			<view class="longPress displayCenter" @longpress="confirm">
				<text style="font-size: 34rpx;font-weight: 300;color: #FFFFFF;">长按确认上车</text>
			</view>
			<!-- 完成订单 -->
			<view class="longPress displayCenter" @click="orderComplete">
				<text style="font-size: 34rpx;font-weight: 300;color: #FFFFFF;">完成订单</text>
			</view>
		</view>
		
		
		<uni-popup ref='popup' type="bottom">
			<view class="passengerInfo" v-for="(item,index) in passengerArr" :key="index"  @click="passengerSingleClick(item,index)">
			     <view class="passengerInfo-content" :class="{'passengerInfo-content-click' : PassengerIndex == index}">
					 <view class="passengerInfo-single">
					 	<text class="passengerInfo-text">乘客：{{item.PassengerName}}</text>
					 	<text class="passengerInfo-text">电话：{{item.PhoneNumber}}</text>
					 	<text class="passengerInfo-text">上车点：{{item.PickUpAddress}}</text>
					 </view>
					 <view class="imageView">
						 <!-- State = 1未上车 2已上车 -->
					 	<image style="width: 100rpx;height: 100rpx;" src="../../static/driver/unBoard.png" 
						:src="item.State == 2 ? Board : unBoard"></image>
					 </view>
				 </view>
			</view>
			
			<view class="popBottomButton">
				<view class="guide displayCenter" @click="guideClick">
					<text style="color: #FFFFFF;font-size: 34rpx;">拉起导航</text>
				</view>
				<view class="phone displayCenter" @click="phoneClick">
					<text style="color: #000000;font-size: 34rpx;">联系电话</text>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	var that;
	import uniPopup from '../../components/uni-popup/uni-popup.vue'
	import $CustomDriver from '../../common/CustomDriver.js'
	import Map from '../../common/my-openMap/openMap.js';
	export default {
		components:{
			uniPopup
		},
		data() {
			return {
				mapHeight: '', //地图高度
				centerLatitude: "", //地图中心点纬度
				centerLongitude: "", //地图中心点经度
				markers: [], //标记点坐标数组
				showLocation: true,
				scale: 18, //地图缩放比例,值越小地图可视范围越大
				polyline: [], //画线数组
				passengerArr:[],//接客订单数组（后面需要改名）
				PassengerIndex:null,
				//地图标识宽高
				iconWidth: 50,
				iconHeight: 50,
				currentPassengerArr:[],//当前显示的乘客
				passengerID:'',//记录乘客ID
				isBoard:1,//记录乘客是否上车
				Board:'../../static/driver/Board.png',//已上车图标
				unBoard:'../../static/driver/unBoard.png',//未上车图标
				startLatitude:'',
				startLongitude:'',
				startAddress:'',
				passengerPhone:'',//乘客手机号
				DriverPhone:'',//司机手机号
				showArray:[],
				doneArray:[],//完成订单时用到
			}
		},
		onLoad(option) {
			that = this;
			//获取系统信息
			uni.getSystemInfo({
				success: function(res) {
					//地图高度
					if (res.platform == 'ios') {
						//当前是iOS系统
						that.system = 'iOS'
					} else {
						//当前是Android系统
						that.system = 'Android'
					}
					// console.log(that.system)
					that.mapHeight = res.windowHeight + 'px';
					that.Height = res.windowHeight / 2 - 4 + 'px';
				}
			});
			that.passengerArr = JSON.parse(decodeURIComponent(option.orderArr))
			// 获取自身位置
			that.getMyLocation();
			//绘制标记点
			// that.setMarker();
		},
		methods: {
//----------------------------------------------------功能方法区开始----------------------------------------------------
			//-------------------------------获取自身位置-------------------------------
			getMyLocation: function() {
				uni.getLocation({
					//type默认为wgs84返回gps坐标,gcj02返回国测局坐标,可用于uni.openLocation的坐标
					type: "gcj02",
					//是否解析地址信息，默认false
					geocode: true,
					success: function(res) {
						//如果地图中心位置坐标为空，将当前位置坐标设置为地图中心坐标
						that.centerLongitude = res.longitude;
						that.centerLatitude = res.latitude;
						that.isLocation = true;
						that.setMarker(res.longitude,res.latitude);
					},
					fail(res) {
						that.isLocation = false;
						uni.showModal({
							title: '温馨提示',
							content: '获取位置失败，请打开定位',
							showCancel: false
						})
					}
				});
			},
			//-------------------------------查看乘客信息-------------------------------
			passengerclick:function(){
				//查看乘客信息时先根据司机ID获取接客订单
				that.GetOrderByDriverID(that.passengerArr[0].DriverID)
				setTimeout(function(){
					if(that.passengerArr.length == 0){
						uni.showToast({
							title:'无乘客信息',
							icon:'none'
						})
					}else {
						that.$refs.popup.open()
					}
				},300)
			},
			//-------------------------------点击乘客-------------------------------
			passengerSingleClick:function(orderArr,index){
				console.log("点击了乘客",orderArr)
				that.PassengerIndex = index;
				that.showArray = [];
				var currentPassengerArr = {
					PassengerName : orderArr.PassengerName,
					PhoneNumber : orderArr.PhoneNumber,
					PickUpAddress : orderArr.PickUpAddress,
					State : orderArr.State,
				}
				that.showArray.push(currentPassengerArr)
				
				//选择乘客的时候将经纬度、地址、AID、电话、上车状态取出
				that.startLatitude = orderArr.PickUpLatitude
				that.startLongitude = orderArr.PickUpLongitude
				that.startAddress = orderArr.PickUpAddress
				//这里的passengerID是确认乘客上车时需要的AID
				that.passengerID = orderArr.AID
				//乘客手机号
				that.passengerPhone = orderArr.PhoneNumber
				//司机手机号
				that.DriverPhone = orderArr.DriverPhone
				that.isBoard = orderArr.State
			},
			//-------------------------------点击拉起导航-------------------------------
			guideClick:function(){
				console.log(that.showArray);
				if(that.showArray.length > 0){
					if(that.showArray[0].State == 2){
						uni.showModal({
							title:'该乘客已上车，是否拉起导航',
							success(res) {
								if(res.confirm){
									Map.openMap(that.startLatitude, that.startLongitude, that.startAddress, 'gcj02');
								}
							}
						})
					}else if(that.showArray[0].State == 1){
						Map.openMap(that.startLatitude, that.startLongitude, that.startAddress, 'gcj02');
						// Map.openMap(24.876465, 118.570195, that.startAddress, 'gcj02');
						//拉起导航时发送信息给乘客
						that.SendMessageBoforeGet();
					}else {
						console.log('乘客上车状态',that.showArray[0].State);
					}
				}else {
					uni.showToast({
						title:'请选择要拉起导航的乘客',
						icon:'none'
					})
				}
			},
			//-------------------------------点击联系电话-------------------------------
			phoneClick:function(){
				uni.makePhoneCall({
					phoneNumber: that.passengerPhone, 
				});
			},
			//-------------------------------地图标点-------------------------------
			setMarker:function(longitude,latitude){
				that.markers = [];
				for(var i = 0; i < that.passengerArr.length;i++){
					//冒泡显示文本
					var content = that.passengerArr[i].PassengerName + '\n' + that.passengerArr[i].PickUpAddress
					var marker = new Object();
					marker = {
						id:i,
						latitude : that.passengerArr[i].PickUpLatitude,
						longitude: that.passengerArr[i].PickUpLongitude,
						iconPath :'../../static/driver/passengerIcon.png',
						width: that.iconWidth,
						height: that.iconHeight,
						callout: {
							content: content, //文本res.data.data[i].name
							color: '#65C36D', //文字颜色
							fontSize: 14, //文本大小
							borderRadius: 6, //边框圆角
							bgColor: '#FFFFFF', //背景颜色
							display: 'BYCLICK', //'BYCLICK':点击显示; 'ALWAYS':常显
							padding: 5,
							textAlign: 'center',
						},
					}
					var json = JSON.stringify(that.markers);
					var arr = JSON.parse(json);
					arr.push(marker);
					that.markers = arr;
				}
			},
			//-------------------------------点击地图标点-------------------------------
			markertap:function(option){
				that.showArray = [];
				for(var i = 0; i < that.passengerArr.length;i++){
					if(option.detail.markerId == i){
						that.showArray = [];
						var currentPassengerArr = {
							PassengerName : that.passengerArr[i].PassengerName,
							PhoneNumber : that.passengerArr[i].PhoneNumber,
							PickUpAddress : that.passengerArr[i].PickUpAddress,
							State : that.passengerArr[i].State,
						}
						that.showArray.push(currentPassengerArr)
						
						//在地图上选择乘客的时候将经纬度、地址、AID、电话、上车状态取出
						that.startLatitude = that.passengerArr[i].PickUpLatitude
						that.startLongitude = that.passengerArr[i].PickUpLongitude
						that.startAddress = that.passengerArr[i].PickUpAddress
						//乘客手机号
						that.passengerPhone = that.passengerArr[i].PhoneNumber
						//司机手机号
						that.DriverPhone = that.passengerArr[i].DriverPhone
						that.isBoard = that.passengerArr[i].State
						//这里的passengerID是确认乘客上车时需要的AID
						that.passengerID = that.passengerArr[i].AID
					}
				}
			},
//----------------------------------------------------功能方法区结束----------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------网络请求方法区开始----------------------------------------------------
            //-------------------------------长按确认-------------------------------
            confirm:function(){
            	if(that.showArray.length > 0){
            		uni.showLoading({
            			title:'加载中...'
            		})
            		// console.log(that.passengerID)
					// that.GetOrderByDriverID(that.passengerArr[0].DriverID)
					//that.passengerID在弹框选择乘客、地图标点选择乘客时赋值
            		uni.request({
            			url: $CustomDriver.Interface.ConfirmBoard.Url,
            			method:$CustomDriver.Interface.ConfirmBoard.method,
            			data:{
            				AID:that.passengerID
            			},
            			success(res) {
            				uni.hideLoading()
            				console.log(res);
							if(res.data.status == true){
								setTimeout(function(){
									uni.showToast({
										title:'已确认上车',
										icon:'success'
									})
								},1000)
								
								//确认上车之后再请求一次根据司机ID获取接客订单
								that.GetOrderByDriverID(that.passengerArr[0].DriverID)
							}
            			},
            			fail(res) {
            				uni.hideLoading()
            				console.log(res);
            			}
            		})
            	}else {
            		uni.showToast({
            			title:'请选择乘客',
            			icon:'none'
            		})
            	}
            },
			//-------------------------------点击完成订单按钮-------------------------------
			orderComplete:function(){
				uni.getStorage({
					key:'userInfo',
					success:function(res){
						console.log(res);
						if(res.data){
							// that.GetOrderByDriverID(res.data.AID)
						}
					}
				})
				
				that.completeOrder();
			},
			//-------------------------------根据司机ID获取接客订单-------------------------------
			GetOrderByDriverID:function(driverID){
				// console.log(driverID);
				uni.showLoading()
				uni.request({
					url: $CustomDriver.Interface.GetOrderByDriverID.Url,
					method: $CustomDriver.Interface.GetOrderByDriverID.method,
					data: {
						DriverID: driverID,
					},
					success: function(res) {
						uni.hideLoading();
						console.log(res)
						if (res.data.status) {
							//给接客订单数组重新赋值
							that.passengerArr = res.data.data;
							for(var i = 0; i < res.data.data.length;i++){
								//当有乘客确认上车时给显示的数组重新赋值
								if(that.passengerID == res.data.data[i].AID){
									that.showArray = [];
									var currentPassengerArr = {
										PassengerName :res.data.data[i].PassengerName,
										PhoneNumber : res.data.data[i].PhoneNumber,
										PickUpAddress : res.data.data[i].PickUpAddress,
										State : res.data.data[i].State,
									}
									that.showArray.push(currentPassengerArr)
									console.log('确认上车后刷新数据',that.showArray);
								}
							}
							//把数组中满足条件的值重新生成一个数组，赋值给arr
							that.doneArray = res.data.data.filter(x => x.State != 2)
							
						} else {
							that.showToast(res.data.msg);
							uni.showToast({
								title:res.data.msg,
								icon:'none'
							})
						}
					},
					fail: function(res) {
						uni.hideLoading();
						that.showToast('网络连接失败');
					}
				})
			},
			//-------------------------------调用完成订单接口-------------------------------
			completeOrder:function(){
				if(that.doneArray.length > 0){
					uni.showToast({
						title:'有乘客未上车',
						icon:'none'
					})
				}else {
					uni.request({
						url: $CustomDriver.Interface.ComPleteOrder.Url,
						method: $CustomDriver.Interface.ComPleteOrder.method,
						data:{
							AID:that.passengerArr[0].OrderAID
						},
						success(res) {
							console.log(res);
							if(res.data.status){
								uni.showToast({
									title:'订单完成！',
									icon:'success',
									complete() {
										uni.navigateTo({
											url:'./orderComplete'
										})
									}
								})
							}else {
								uni.showToast({
									title:res.data.msg,
									icon:'none'
								})
							}
						},
						fail(res) {
							console.log(res);
						}
					})
				}
			},
			SendMessageBoforeGet:function(){
				uni.request({
					url:$CustomDriver.Interface.SendMessageBoforeGet.Url,
					method:$CustomDriver.Interface.SendMessageBoforeGet.method,
					data:{
						phoneNumber:that.passengerPhone,
						DriverPhone:that.DriverPhone
					},
					success(res) {
						console.log('发送信息成功',res);
					},
					fail(res) {
						console.log('发送信息失败',res);
					}
				})
			}


//----------------------------------------------------网络请求方法区结束----------------------------------------------------
		}
	}
</script>

<style lang="scss">
    .content {
		width: 750rpx;
		background-color: #FFFFFF;
	}
	.map {
		width: 750rpx;	
	}
	.bottomButtonContent {
		position: fixed;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		bottom: 30rpx;
		margin-left: 25rpx;
		height: 110rpx;
		width: 700rpx;
	}
	.longPress{
		width: 320rpx;
		height: 100rpx;
		border-radius: 20rpx;
		text-align: center;
		background-color: #474747;
	}
	.passenger{
		background-color: #FFFFFF;
		position: fixed;
		bottom: 170rpx;
		width: 700rpx;
		height: 100rpx;
		margin-left: 25rpx;
		border-radius: 20rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	
	.order{
		background-color: #FFFFFF;
		position: fixed;
		bottom: 300rpx;
		width: 700rpx;
		margin-left: 25rpx;
		border-radius: 20rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.passengerInfo{
		background-color: #FFFFFF;
		border-bottom-width: 1;
		border-bottom-color: #E3E3E3;
	}
	.passengerInfo-content{
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		margin-top: 10rpx;
		margin-left: 10rpx;
		margin-right: 10rpx;
		margin-bottom: 10rpx;
		border-radius: 10rpx;
	}
	.passengerInfo-content-click{
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		margin-top: 10rpx;
		margin-left: 10rpx;
		margin-right: 10rpx;
		margin-bottom: 10rpx;
		border-radius: 10rpx;
		border-color: #007AFF;
		border-width: 1rpx;
	}
	.passengerInfo-single{
		margin-top: 50rpx;
		margin-left: 50rpx;
		margin-right: 50rpx;
	}
	.passengerInfo-text{
		text-overflow: ellipsis;
		width: 400rpx;
		font-size: 30rpx;
		color: #343434;
		font-weight: 300;
		margin-bottom: 25rpx;
	}
	.imageView{
		margin-right: 50rpx;
	}
	.popBottomButton{
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		background-color: #FFFFFF;
		padding-top: 20rpx;
		padding-bottom: 30rpx;
	}
	.guide{
		margin-left: 50rpx;
		background-color: #FA7466;
		height: 90rpx;
		width: 260rpx;
		border-radius: 12rpx;
	}
	.phone{
		margin-right: 50rpx;
		background-color: #FFFFFF;
		height: 90rpx;
		width: 260rpx;
		border-radius: 12rpx;
		border-color: #666666;
		border-width: 1rpx;
	}
	.displayCenter{
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}
</style>
